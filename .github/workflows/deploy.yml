name: CI/CD to EC2

on:
  push:
    branches: [ "main" ]   # Trigger on pushes to main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Build with Maven
        run: mvn clean package -DskipTests

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/spring-ec2-demo:latest .

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/spring-ec2-demo:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1

      - name: Deploy Docker container via SSM
        run: |
          aws ssm send-command \
            --targets "Key=InstanceIds,Values=${{ secrets.EC2_INSTANCE_ID }}" \
            --document-name "AWS-RunShellScript" \
            --comment "Deploy Spring Boot Docker App" \
            --parameters 'commands=[
              "docker stop spring-ec2-demo || true",
              "docker rm spring-ec2-demo || true",
              "docker pull '${{ secrets.DOCKER_USERNAME }}/spring-ec2-demo:latest'",
              "docker run -d -p 8080:8080 --name spring-ec2-demo '${{ secrets.DOCKER_USERNAME }}/spring-ec2-demo:latest'"
            ]'


            